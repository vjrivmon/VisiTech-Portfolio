{
  "mcpServers": {
    "github": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-github"],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}"
      },
      "description": "GitHub API integration - Fetch repos, READMEs, commits, stats",
      "capabilities": [
        "repository_management",
        "fetch_repositories",
        "fetch_readme",
        "fetch_commits",
        "webhook_management"
      ],
      "usage": {
        "list_repos": "Get all repositories for user vjrivmon",
        "get_repo": "Fetch single repository details",
        "get_readme": "Fetch and parse README files",
        "get_languages": "Get tech stack information"
      }
    },
    
    "filesystem": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-filesystem",
        "/home/vicente/RoadToDevOps/visitech_portfolio"
      ],
      "description": "File system operations - Read/write files, list directories",
      "capabilities": [
        "read_files",
        "write_files",
        "create_directories",
        "list_directory",
        "search_files"
      ],
      "usage": {
        "read": "Read file contents",
        "write": "Write to files",
        "list": "List directory contents",
        "search": "Search for files"
      }
    },
    
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "description": "Sequential thinking for complex problem solving",
      "capabilities": [
        "step_by_step_reasoning",
        "problem_analysis",
        "solution_planning"
      ],
      "usage": {
        "think": "Break down complex problems into steps"
      }
    },

    "playwright": {
      "command": "npx",
      "args": ["-y", "@executeautomation/playwright-mcp-server"],
      "description": "Playwright browser automation for testing and scraping",
      "capabilities": [
        "browser_automation",
        "web_testing",
        "screenshot_capture",
        "page_interaction"
      ],
      "usage": {
        "automate": "Automate browser interactions",
        "test": "Run automated tests",
        "screenshot": "Capture screenshots"
      }
    },

    "chakra-ui": {
      "command": "npx",
      "args": ["-y", "@chakra-ui/react-mcp"],
      "description": "Chakra UI components and utilities",
      "capabilities": [
        "ui_components",
        "theme_management",
        "component_generation"
      ],
      "usage": {
        "components": "Access Chakra UI component library"
      }
    },

    "puppeteer": {
      "command": "npx",
      "args": ["-y", "puppeteer-mcp-server"],
      "description": "Puppeteer browser automation and control",
      "capabilities": [
        "web_automation",
        "screenshot_capture",
        "page_interaction",
        "pdf_generation"
      ],
      "usage": {
        "automate": "Automate web interactions",
        "screenshot": "Capture screenshots",
        "pdf": "Generate PDFs from web pages"
      }
    },
    
    "reactbits": {
      "command": "npx",
      "args": ["-y", "reactbits-dev-mcp-server"],
      "env": {
        "GITHUB_TOKEN": "${GITHUB_TOKEN}"
      },
      "description": "ReactBits.dev components - 135+ animated React components",
      "capabilities": [
        "component_discovery",
        "animated_components",
        "ui_components",
        "demo_generation"
      ],
      "usage": {
        "list_components": "Browse ReactBits component library",
        "get_component": "Get source code for specific components",
        "search_components": "Search components by name or description",
        "get_demo": "Get usage examples and demo code"
      }
    },

    "shadcn": {
      "command": "npx",
      "args": ["shadcn@latest", "mcp"],
      "description": "shadcn-ui components via MCP",
      "capabilities": [
        "component_browsing",
        "component_installation",
        "registry_management"
      ],
      "usage": {
        "browse": "Browse available shadcn components",
        "install": "Install shadcn components"
      }
    }
  },
  
  "project_info": {
    "name": "visitech_portfolio",
    "developer": "Vicente Rivas Monferrer (@vjrivmon)",
    "stack": "Next.js 14, TypeScript, Tailwind CSS",
    "purpose": "Portfolio profesional con integraci√≥n GitHub API"
  }
}